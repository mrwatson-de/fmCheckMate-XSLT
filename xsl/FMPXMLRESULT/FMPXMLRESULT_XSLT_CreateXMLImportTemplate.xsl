<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xslt="urn:thisTemporaryNamespaceWillBeRemoved"
	xmlns:fmpxml="http://www.filemaker.com/fmpxmlresult" version="1.0">
	<!-- xmlns:xslt=""
 -->
	<!-- ===== AUTHOR =====

	(c) Copyright 2020 MrWatson, russell@mrwatson.de All Rights Reserved. 

	===== PURPOSE =====

	XSL-File: FMPXMLRESULT_XSLT_CreateXMLImportTemplate.xsl

	XML-Source: FMPXMLRESULT.xml
	XML-Grammar: FMPXMLRESULT
	XML-Content: At least one record of data
	
	Generates an xslt stylesheet template, to be used to import xml data into the fields.
	
	                                
	1. Create an xslt stylesheet TEMPLATE:
		- In FileMaker go to the table you want to import in to,
		- Find (or create) one or more example records
		- Export the FileMaker data as XML to file MyTableImport.xsl (Grammar=FMXMLRESULT and XSLT=FMPXMLRESULT_XSLT_CreateXMLImportTemplate.xsl),
		
	2. TEST the TEMPLATE
		- Create test data by exporting (the same) FileMaker data as XML to file MyTableData.xml (Grammar=FMXMLRESULT)
		- Test the XSLT import template using the test data: import FileMaker Records from XML Data Source (XML=MyTableData.xml and XSL=MyTableImport.xsl, matching Field names)

	3. CREATE THE REAL IMPORT-XSL 
	   - Adjust the template's XPath expressions as necessary to extract the relevant data out of the real source XML-data
	   - Use the adjusted import-XSLT to import the real source XML-data
	
	===== CHANGES HISTORY =====
	(c) russell@mrwatson.de 2020
	2019-01-01 MrW: Version 1.0.0 - Promoted to version 1.0 and moved to the fmCheckMate library
	2019-01-01 MrW: Version 0.9.2 - Simplified + improved the stylesheet creation to make a stylesheet which WORKS on the exported FMXMLRESULT file, making it easier to TEST the generated stylesheet.
	2019-01-01 MrW: Version 0.9.1 - added namespace-alias to rename xslt namespace in the output file ... It works, but instead of renaming the prefix it changes the ns-url.  
	2015-09-11 MrW: Version 0.9 - xslt namespace added
	2013-05-08 MrW: Version 0.9
	-->
	<!-- ===== HEAD ===== -->
	<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes" omit-xml-declaration="no" />
	<!-- the xslt namespace should be associated with the xsl namespace in the resulting stylesheet -->
	<xsl:namespace-alias stylesheet-prefix="xslt" result-prefix="xsl"/>
	<!-- ===== TEMPLATES ===== -->
	<!-- Main -->
	<xsl:template match="/fmpxml:FMPXMLRESULT">
		<xslt:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
			<xsl:comment>
				An XSLT Template to import an XML file #name# into #a FileMaker database#.
				Please adjust this template as necessary.
				
				This file was generated by MrWatson's automatic FileMaker Import XSLT generator 'FMPXMLRESULT_XSLT_CreateXMLImportTemplate.xsl'
			</xsl:comment>
			<xsl:comment> ===== HEAD ===== </xsl:comment>
			<xslt:output method="xml" version="1.0" encoding="UTF-8" indent="yes"
				omit-xml-declaration="no" cdata-section-elements="Calculation Text Data"/>
			<xsl:comment> ===== VARIABLES ===== </xsl:comment>
			<xslt:variable name="foundcount">
				<xslt:value-of select="count(//fmpxml:ROW)"/>
			</xslt:variable>
			<xsl:comment> ===== TEMPLATES ===== </xsl:comment>
			<xsl:comment> Main </xsl:comment>
			<xslt:template match="/">
				<FMPXMLRESULT xmlns="http://www.filemaker.com/fmpxmlresult">
					<xsl:copy-of select="fmpxml:ERRORCODE"/>
					<xsl:copy-of select="fmpxml:PRODUCT"/>
					<xsl:copy-of select="fmpxml:DATABASE"/>
					<xsl:copy-of select="fmpxml:METADATA"/>
					<RESULTSET>
						<xsl:attribute name="FOUND">
							<xsl:text>{$foundcount}</xsl:text>
						</xsl:attribute>
						<xslt:apply-templates select="*"/>
					</RESULTSET>
				</FMPXMLRESULT>
			</xslt:template>
			<!-- Create ROW template -->
			<xsl:comment> ROW </xsl:comment>
			<xslt:template match="fmpxml:ROW">
				<ROW>
					<!-- MODID="3" RECORDID="7" are not necessary -->
					<!-- Create COL/DATA ouput for each target field -->
					<xsl:for-each select="fmpxml:METADATA/fmpxml:FIELD">
						<xsl:comment>
							<xsl:value-of select="concat(' Column ', position(), ': ', @NAME, ' (', @TYPE, ')')"/>
						</xsl:comment>
						<COL>
							<DATA>
								<xslt:value-of>
									<xsl:attribute name="select">
										<xsl:value-of
											select="concat('fmpxml:COL[', position(), ']/fmpxml:DATA')"
										/>
									</xsl:attribute>
								</xslt:value-of>
							</DATA>
						</COL>
					</xsl:for-each>
				</ROW>
			</xslt:template>
			<!-- Create template to skip other text-->
			<xsl:comment> ignore all other text </xsl:comment>
			<xslt:template match="text()"/>
			<!-- End stylesheet xslteration -->
		</xslt:stylesheet>
		<!-- End Main Template -->
	</xsl:template>
	<!-- ignore all other text -->
	<xsl:template match="text()"/>
</xsl:stylesheet>
